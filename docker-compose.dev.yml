version: '3.8'
name: id_dev

services:
  id_api:
    build:
      context: .
      dockerfile: ./api/Dockerfile.dev
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
    volumes:
      - ./api:/id/api
      - ./shared:/id/shared
      - /id/api/node_modules
    ports:
      - "${API_PORT:-8001}:${API_PORT:-8001}"
    restart: always

  id_web:
    build:
      context: .
      dockerfile: ./web/Dockerfile.dev
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
    volumes:
      - ./web:/id/web
      - ./shared:/id/shared
      - /id/web/node_modules
    ports:
      - "${WEB_PORT:-8000}:${WEB_PORT:-8000}"
    restart: always

  id_postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-id}
      - PGPORT=${PGPORT:-7000}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  id_keydb:
    image: eqalpha/keydb:x86_64_v6.3.1
    volumes:
      - ./keydb/keydb.conf:/etc/keydb/keydb.conf
    restart: always

  id_nginx:
    image: nginx:1.23.2-alpine
    volumes:
      - type: bind
        source: ./nginx/nginx.dev.conf
        target: /etc/nginx/conf.d/nginx.dev.conf
    ports:
      - "${VIRTUAL_PORT:-9000}:${VIRTUAL_PORT:-9000}"
    restart: always

  id_mailslurper:
    image: marcopas/docker-mailslurper
    volumes:
      - ./mailslurper/config.json:/opt/mailslurper/config.json
    ports:
      - "2500:2500"
      - "8080:8080"
      - "8085:8085"
    restart: always

volumes:
  pgdata:
